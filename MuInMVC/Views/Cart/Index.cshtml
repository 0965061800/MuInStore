@model List<MuInShared.Cart.CartItemReponse>
@{
	ViewData["Title"] = "Cart";
	Layout = "_Layout";
}
<partial name="_Header2" />
<!-- breadcrumb-section -->
<div class="breadcrumb-section breadcrumb-bg">
	<div class="container">
		<div class="row">
			<div class="col-lg-8 offset-lg-2 text-center">
				<div class="breadcrumb-text">
					<p>Fresh and Organic</p>
					<h1>Cart</h1>
				</div>
			</div>
		</div>
	</div>
</div>
<!-- end breadcrumb section -->
@if(Model is null)
{
	<div class="cart-section mt-150 mb-150">
		<div class="container text-center">
			<div class="breadcrumb-text">
				<p>Chưa có sản phẩm nào trong giỏ hàng</p>
				<a asp-controller="Product" asp-action="Index" class="boxed-btn">Đến cửa hàng</a>
			</div>
		</div>
	</div>
} else
{
	
	<!-- cart -->
	<div class="cart-section mt-150 mb-150">
		<div class="container">
			<div class="row">
				<div class="col-lg-8 col-md-12">
					<div class="cart-table-wrap">
						<form id="cartForm" asp-controller="Cart" asp-action="UpdateCart" method="Post">
							<table class="cart-table">
							<thead class="cart-table-head">
								<tr class="table-head-row">
									<th class="product-remove"></th>
									<th class="product-image font-weight-bold">Product Image</th>
									<th class="product-name font-weight-bold">Name</th>
									<th class="product-color font-weight-bold">Color</th>
									<th class="product-price font-weight-bold">Price</th>
									<th class="product-quantity font-weight-bold">Quantity</th>
									<th class="product-total font-weight-bold">Total</th>
								</tr>
							</thead>
							<tbody>
								@foreach (var item in Model)
								{
									<tr class="table-body-row">
										<td class="product-remove"><a asp-controller="Cart" asp-action="Remove" asp-route-id="@item.ProductId" asp-route-colorId ="@item.ColorId"><i class="far fa-window-close"></i></a></td>
										<td class="product-image"><img src="~/assets/img/products/product-img-1.jpg" alt=""></td>
										<td class="product-name">@item.ProductName</td>
										<td class="product-name">@item.ColorName</td>
										<td class="product-price">@item.UnitPrice</td>
										<td class="product-quantity"><input type="number" name="quantities" data-product-id="@item.ProductId" data-color-id="@item.ColorId" value="@item.Amount" class="form-control"></td>
										<td class="product-total">@item.TotalMoney.ToString("#,##0") VNĐ</td>
									</tr>
								}
							</tbody>
						</table>
						</form>
					</div>
				</div>

				<div class="col-lg-4">
					<div class="total-section">
						<table class="total-table">
							<thead class="total-table-head">
								<tr class="table-total-row">
									<th>Total</th>
									<th>Price</th>
								</tr>
							</thead>
							<tbody>
								<tr class="total-data">
									<td><strong>Subtotal: </strong></td>
									<td>@Model.Sum(x => x.TotalMoney).ToString("#,##0") VNĐ</td>
								</tr>
								<tr class="total-data">
									<td><strong>Shipping: </strong></td>
									<td>0</td>
								</tr>
								<tr class="total-data">
									<td><strong>Total: </strong></td>
									<td>@Model.Sum(x => x.TotalMoney).ToString("#,##0") VNĐ</td>
								</tr>
							</tbody>
						</table>
						<div class="cart-buttons">
							<a id="updateCartButton" class="boxed-btn">Update Cart</a>
							<a  class="boxed-btn black" asp-controller="Checkout" asp-action="Index">Check Out</a>
						</div>
					</div>

					<div class="coupon-section">
						<h3>Apply Coupon</h3>
						<div class="coupon-form-wrap">
							<form action="index.html">
								<p><input type="text" placeholder="Coupon"></p>
								<p><input type="submit" value="Apply"></p>
							</form>
						</div>
					</div>
				</div>
			</div>
		</div>
	</div>
	<!-- end cart -->
}

@section Scripts {
	<script>
		document.getElementById('updateCartButton').addEventListener('click', function () {
			// Gather updated quantities
			var quantities = [];
			document.querySelectorAll('input[name="quantities"]').forEach(function (input) {
				quantities.push({
					ProductId: input.getAttribute('data-product-id'),
					ColorId: input.getAttribute('data-color-id'),
					Amount: input.value
				});
			});

			// Send AJAX request to update cart
			fetch('/Cart/UpdateCart', {
				method: 'POST',
				headers: {
					'Content-Type': 'application/json',
					'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value
				},
				body: JSON.stringify(quantities)
			})
			.then(response => response.json())
			.then(data => {
				if (data.success) {
					// Optionally, update the cart totals on the page without reloading
					alert('Cart updated successfully!');
					// Code to update the UI with the new cart data (totals, etc.)
				} else {
					alert('Failed to update cart.');
				}
			})
			.catch(error => console.error('Error:', error));
		});
	</script>
}