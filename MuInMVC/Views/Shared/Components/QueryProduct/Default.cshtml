@using MuInShared.Helpers
@model ProductQueryObject


<div>
	<div class="card-body">
		<div class="form-group">
			<label class="col-form-label text-right font-weight-bold">Nhãn hàng</label>
			<select class="form-control selectpicker custom-select" asp-for="BrandAlias" asp-items="ViewBag.BrandList" id="Brand">
				<option value="0">Chọn nhãn hàng</option>
				<option value="0">No Filter</option>
			</select>
		</div>
		<div class="form-group">
			<label class="col-form-label text-right font-weight-bold">Sắp xếp</label>
			<select class="form-control selectpicker custom-select" id="Sorting">
				<option value="0" selected>Sắp xếp ...</option>
				<option value="0">Mới nhất</option>
				<option value="1">Đánh giá</option>
				<option value="2">Giá thấp nhất</option>
				<option value="3">Giá cao nhất</option>
			</select>
		</div>
	</div>
</div>


<script>
	document.getElementById("Brand").addEventListener("change", function () {
		const selectedBrand = this.value;
		const currentUrl = new URL(window.location.href);

		if (selectedBrand && selectedBrand != "0") {
			currentUrl.searchParams.set("FilterBy", "ByBrand");
			currentUrl.searchParams.set("FilterValue", selectedBrand);
		} else {
			currentUrl.searchParams.delete("FilterBy");
			currentUrl.searchParams.delete("FilterValue");
		}

		window.location.href = currentUrl.toString();
	});
	document.getElementById("Sorting").addEventListener("change", function () {
		const selectedSorting = this.value;
		const currentUrl = new URL(window.location.href);

		if (selectedSorting) {
			currentUrl.searchParams.set("OrderByOptions", selectedSorting);
		} else {
			currentUrl.searchParams.delete("OrderByOptions");	
		}

		window.location.href = currentUrl.toString();
	});
</script>